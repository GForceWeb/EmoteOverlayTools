import{V as W,h as $}from"./main-Am9pVtaF.js";import{g as s}from"./index-Brfk6Bdo.js";const H={L1:[[0,0,1,0],[1,1,1,0],[0,0,0,0],[0,0,0,0]],L2:[[1,0,0,0],[1,0,0,0],[1,1,0,0],[0,0,0,0]],L3:[[1,1,1,0],[1,0,0,0],[0,0,0,0],[0,0,0,0]],L4:[[1,1,0,0],[0,1,0,0],[0,1,0,0],[0,0,0,0]],P1:[[1,0,0,0],[1,1,1,0],[0,0,0,0],[0,0,0,0]],P2:[[1,1,0,0],[1,0,0,0],[1,0,0,0],[0,0,0,0]],P3:[[1,1,1,0],[0,0,1,0],[0,0,0,0],[0,0,0,0]],P4:[[0,1,0,0],[0,1,0,0],[1,1,0,0],[0,0,0,0]],Z1:[[1,1,0,0],[0,1,1,0],[0,0,0,0],[0,0,0,0]],Z2:[[0,1,0,0],[1,1,0,0],[1,0,0,0],[0,0,0,0]],Z3:[[1,1,0,0],[0,1,1,0],[0,0,0,0],[0,0,0,0]],Z4:[[0,1,0,0],[1,1,0,0],[1,0,0,0],[0,0,0,0]],S1:[[0,1,1,0],[1,1,0,0],[0,0,0,0],[0,0,0,0]],S2:[[1,0,0,0],[1,1,0,0],[0,1,0,0],[0,0,0,0]],S3:[[0,1,1,0],[1,1,0,0],[0,0,0,0],[0,0,0,0]],S4:[[1,0,0,0],[1,1,0,0],[0,1,0,0],[0,0,0,0]],T1:[[0,1,0,0],[1,1,1,0],[0,0,0,0],[0,0,0,0]],T2:[[1,0,0,0],[1,1,0,0],[1,0,0,0],[0,0,0,0]],T3:[[1,1,1,0],[0,1,0,0],[0,0,0,0],[0,0,0,0]],T4:[[0,1,0,0],[1,1,0,0],[0,1,0,0],[0,0,0,0]],I1:[[1,0,0,0],[1,0,0,0],[1,0,0,0],[1,0,0,0]],I2:[[1,1,1,1],[0,0,0,0],[0,0,0,0],[0,0,0,0]],I3:[[1,0,0,0],[1,0,0,0],[1,0,0,0],[1,0,0,0]],I4:[[1,1,1,1],[0,0,0,0],[0,0,0,0],[0,0,0,0]],Q1:[[1,1,0,0],[1,1,0,0],[0,0,0,0],[0,0,0,0]],Q2:[[1,1,0,0],[1,1,0,0],[0,0,0,0],[0,0,0,0]],Q3:[[1,1,0,0],[1,1,0,0],[0,0,0,0],[0,0,0,0]],Q4:[[1,1,0,0],[1,1,0,0],[0,0,0,0],[0,0,0,0]]},{globalVars:k,globalConst:M}=W;function Q(f,T=20,R=100){let c=Array(20).fill(null).map(()=>Array(10).fill(null));const l=document.createElement("div");l.id="tetris-grid-"+k.divnumber++,l.className="tetris-grid",M.warp.appendChild(l),s.set(l,{position:"absolute",left:"50%",bottom:"32px",transform:"translateX(-50%)",width:10*32+"px",height:20*32+"px",display:"grid",gridTemplateColumns:"repeat(10, 32px)",gridTemplateRows:"repeat(20, 32px)",gap:"0px"});for(let t=0;t<20;t++)for(let e=0;e<10;e++){const o=document.createElement("div");o.className="tetris-cell",o.id=`tetris-${l.id}-${t}-${e}`,l.appendChild(o),s.set(o,{width:"32px",height:"32px",backgroundColor:"transparent"})}const I=Object.keys(H).filter(t=>t.endsWith("1")).map(t=>t[0]);let r=null,a={x:0,y:0},m=0,u=0;function y(){const t=I[Math.floor(Math.random()*I.length)],e=Math.floor(Math.random()*4)+1;return H[`${t}${e}`]}function x(t){let e=0;for(let o=0;o<4;o++)for(let n=0;n<4;n++)t[n][o]&&(e=Math.max(e,o+1));return e}function g(t,e,o){if(e>=0&&e<20&&t>=0&&t<10){const n=document.getElementById(`tetris-${l.id}-${e}-${t}`);n&&(o?s.set(n,{backgroundImage:`url(${o})`,backgroundSize:"contain",backgroundPosition:"center",backgroundRepeat:"no-repeat"}):s.set(n,{clearProps:"background"}))}}function h(){for(let t=0;t<20;t++)for(let e=0;e<10;e++)g(e,t,c[t][e]);if(r){const t=f[u];for(let e=0;e<4;e++)for(let o=0;o<4;o++)r[e][o]&&a.y+e>=0&&g(a.x+o,a.y+e,t)}}function _(t,e){for(let o=0;o<4;o++)for(let n=0;n<4;n++)if(t[o][n]){const i=e.x+n,d=e.y+o;if(i<0||i>=10||d>=20||d>=0&&c[d][i]!==null)return!1}return!0}function P(t,e){const o=f[u];u=(u+1)%f.length;for(let n=0;n<4;n++)for(let i=0;i<4;i++)t[n][i]&&e.y+n>=0&&(c[e.y+n][e.x+i]=o);b()}function b(){const t=[];for(let e=0;e<20;e++)c[e].every(o=>o!==null)&&t.push(e);t.length>0&&C(t)}function C(t){const e=r,o={...a};r=null;const n=[];t.forEach(d=>{for(let p=0;p<10;p++){const G=document.getElementById(`tetris-${l.id}-${d}-${p}`);G&&n.push(G)}});const i=s.timeline({onComplete:()=>{w(t),r=e,a=o,h()}});i.to(n,{backgroundColor:"white",duration:.1}).to(n,{backgroundColor:"transparent",duration:.1}).to(n,{backgroundColor:"white",duration:.1}).to(n,{backgroundColor:"transparent",duration:.1}).to(n,{backgroundColor:"white",duration:.1}),i.to(n,{scale:1.5,opacity:0,duration:.2,stagger:.02,ease:"power1.out"})}function w(t){t.sort((e,o)=>o-e),t.forEach(e=>{c.splice(e,1),c.unshift(Array(10).fill(null))})}function E(){r=y();const t=x(r);a={x:Math.floor(Math.random()*(10-t+1)),y:-4},m++}function D(){r||E();const t={...a,y:a.y+1};r&&_(r,t)?a=t:r&&(P(r,a),r=null),h(),m<T?setTimeout(D,R):s.to(l,{opacity:0,duration:1,ease:"power2.out",onComplete:()=>{$.removeelement(l.id)}})}D()}export{Q as tetris};
